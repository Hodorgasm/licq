#!/bin/sh
#
#  written by conon <troll@logi.net.au>
#
#  This script is intended to be run before starting licq
#  It prepares the directory and users setups to that of a
#  current centericq setup
#  just run the script and it will do it all
#

test "${1}" && test "${1}" == "-t" -o "${1}" == "-T" && TESTING="-b .licq"

if test "$TESTING"
  then
    LICQ_DIR=.licq
    CENTER_DIR=.centericq
  else
    LICQ_DIR=~/.licq
    CENTER_DIR=~/.centericq
  fi

LICQ_USER_DIR=${LICQ_DIR}/users
LICQ_HISTORY_DIR=${LICQ_DIR}/history
LICQ_CONF=${LICQ_DIR}/licq.conf
LICQ_OWNER=${LICQ_DIR}/owner.uin
LICQ_QT_GUI=${LICQ_DIR}/licq_qt-gui.conf
LICQ_USERS=${LICQ_DIR}/users.conf
OWNER_HISTORY=${LICQ_HISTORY_DIR}/owner.history

CENTER_RC=${CENTER_DIR}/config
CENTER_MODES=${CENTER_DIR}/modelist

C_UIN="icq_uin"
L_UIN="Uin"
UIN=""
C_PASSWORD="icq_pass"
L_PASSWORD="Password"
PASSWORD=""
C_SERVER="icq_server"
L_SERVER="ICQServer"
SERVER=""
C_SERVER_PORT=""
L_SERVER_PORT="Port"
SERVER_PORT=""

function read_centericq_conf ()
{
  local INBASE
  local INREST
  while read INBASE INREST
    do
      case ${INBASE}
        in
        $C_UIN)      UIN=${INREST};;
        $C_PASSWORD) PASSWORD=${INREST};;
        $C_SERVER)   SERVER=${INREST%%':'*}
                     SERVER_PORT=${INREST##*':'};;
        esac
     done
}

function out_licq_conf ()
{
  local INSTUFF
  local INBASE
  local INREST
  while read INSTUFF
    do
      INBASE=${INSTUFF%%'='*}
      INBASE=${INSTUFF%%' '*}
      INREST=${INSTUFF##*'='}
      INREST=${INSTUFF##*' '}
      case $INBASE
        in
        L_SERVER) echo "${INBASE} = ${SERVER}";;
        L_PORT)   echo "${INBASE} = ${SERVER_PORT}";;
        *)        echo "${INSTUFF}";;
        esac
    done
}

function out_owner_uin ()
{
  local INSTUFF
  local INBASE
  local INREST
  while read INSTUFF
    do
      INBASE=${INSTUFF%%'='*}
      INBASE=${INSTUFF%%' '*}
      INREST=${INSTUFF##*'='}
      INREST=${INSTUFF##*' '}
      case $INBASE
        in
        "History")     echo "${INBASE} = ${OWNER_HISTORY}";;
        ${L_PASSWORD}) echo "${INBASE} = ${PASSWORD}";;
        ${L_UIN})      echo "${INBASE} = ${UIN}";;
        *)             echo "${INSTUFF}";;
        esac
    done
}

declare -a CONTACTS
CONTACT_COUNT=0

function test_mv ()
{
  if test -e ${1}.new
    then
      test -e ${1} && mv ${1} ${1}.orig
      mv ${1}.new ${1}
    fi
}

declare -a USER_DETAIL
USER_DETAILS=0

function parse_info ()
{
  USER_DETAILS=0
  while read USER_DETAIL[${USER_DETAILS}]
    do
      let USER_DETAILS+=1
    done
}

NEW_USER=0
function user_mode ()
{
  local mode=0
  local name=""
  local uin=""
  local IGNORE=0
  local VISIBLE=0
  local INVISIBLE=0
  while read mode name uin
    do
      if test "${name}" == "${1}" -o "${uin}" == "${1}"
        then
          case ${mode}
            in
            "1") IGNORE=8;;
            "2") VISIBLE=2;;
            "3") INVISIBLE=4;;
            esac
        fi
    done
  let mode=${IGNORE}
  let mode+=${VISIBLE}
  let mode+=${INVISIBLE}
  echo ${mode}
}

function out_user_uin ()
{
  local SYSTEM_GROUPS=0
  SYSTEM_GROUPS=`user_mode ${1} <${CENTER_MODES}`

  cat <<-EOF
	[user]
	History = ${LICQ_HISTORY_DIR}/${1}.history
	Groups.System = ${SYSTEM_GROUPS}
	Groups.User =
	Ip =
	Port =
	NewUser = ${NEW_USER}
	NewMessages =
	LastOnline = ${USER_DETAIL[46]}
	Alias = ${USER_DETAIL[0]}
	FirstName = ${USER_DETAIL[1]}
	LastName = ${USER_DETAIL[2]}
	Email1 = ${USER_DETAIL[5]}
	Email2 =
	City = ${USER_DETAIL[6]}
	State = ${USER_DETAIL[7]}
	PhoneNumber = ${USER_DETAIL[8]}
	FaxNumber = ${USER_DETAIL[9]}
	Address = ${USER_DETAIL[10]}
	CellularNumber = ${USER_DETAIL[11]}
	Zipcode = ${USER_DETAIL[12]}
	Country = ${USER_DETAIL[13]}
	Timezone =
	Authorization =
	HideEmail =
	Age = ${USER_DETAIL[26]}
	Gender = ${USER_DETAIL[27]}
	Homepage = ${USER_DETAIL[29]}
	BirthYear = ${USER_DETAIL[34]}
	BirthMonth = ${USER_DETAIL[33]}
	BirthDay = ${USER_DETAIL[32]}
	Language1 =
	Language2 =
	Language3 =
	CompanyCity = ${USER_DETAIL[14]}
	CompanyState = ${USER_DETAIL[15]}
	CompanyPhoneNumber = ${USER_DETAIL[16]}
	CompanyFaxNumber = ${USER_DETAIL[17]}
	CompanyAddress = ${USER_DETAIL[18]}
	CompanyName = ${USER_DETAIL[21]}
	CompanyDepartment = ${USER_DETAIL[22]}
	CompanyPosition = ${USER_DETAIL[23]}
	CompanyHomepage = ${USER_DETAIL[25]}
	EOF
}

function parse_history_0 ()
{
true
}

function parse_history ()
{
  local INSTUFF
  local LINE_COUNT=0
  local INMESG=false
  local MESSAGE=""
  local CDIR="R"
  local CMND=""
  local TIME=""
  local TESTY="\014"
  local URL=""

#read -r INSTUFF
  while read -r INSTUFF
    do
      INSTUFF=`echo ${INSTUFF} |tr -d "\f\r"`
      if ! test "${INSTUFF}" && ${INMESG}
        then
          echo -e "[ ${CDIR} | ${SUBCMD} | 2046 | 0001 | ${TIME} ]"
          echo -en "${MESSAGE}"
          test "${URL}" && echo -en "${URL}"
          INMESG=false
          LINE_COUNT=0
          MESSAGE=""
          URL=""
        fi
      test "${INSTUFF}" && INMESG=true
      case ${LINE_COUNT}
        in
         "0")    if test "${INSTUFF}" == "OUT" 
                 then
                   CDIR="S"
                 else
                   CDIR="R"
                 fi;;
         "1")     SUBCMD="${INSTUFF}";;
         "2")     TIME="${INSTUFF}";;
         "3")     true;;
         "4")     case "$SUBCMD"
                    in
                    "AUTH") if test "${INSTUFF}" == "1"
                              then
                                SUBCMD="0008"
                              else
                                SUBCMD="0007"
                              fi;;
                    "URL")  URL=":${INSTUFF}"
                                SUBCMD="0004";;
                    *)  MESSAGE="${MESSAGE}:${INSTUFF}\n"
                                SUBCMD="0001";;
                    esac;;
         *)     MESSAGE="${MESSAGE}:${INSTUFF}\n";;
        esac
      test "${INSTUFF}" && let LINE_COUNT+=1
    done 
}

function parse_contacts ()
{
  local UIN
  for DIR in ${CENTER_DIR}/*/
    do
      UIN=${DIR%*'/'}
      UIN=${UIN##${CENTER_DIR}/}
      test "$UIN" == "0" && continue
      CONTACTS[${CONTACT_COUNT}]="${UIN}"
      let CONTACT_COUNT+=1
      if test -e ${DIR}/history
        then
          parse_history <${DIR}/history  >${LICQ_HISTORY_DIR}/${UIN}.history
        else
          echo -n > ${LICQ_HISTORY_DIR}/${UIN}.history
        fi
      if test -e ${DIR}/info
        then
          parse_info <${DIR}/info
        fi
        out_user_uin ${UIN} >${LICQ_USER_DIR}/${UIN}.uin
    done
}

function out_users_conf ()
{
  local TMPCOUNT=0
  local TEMPCOUNT=1
  echo -e "[users]\nNumOfUsers = ${CONTACT_COUNT}"
  while test ${TMPCOUNT} -lt ${CONTACT_COUNT}
    do
      echo "User${TEMPCOUNT} = ${CONTACTS[${TMPCOUNT}]}"
      let TMPCOUNT+=1
      let TEMPCOUNT+=1
    done
}

test -d ${LICQ_DIR} || licq ${TESTING} -I -h >/dev/null 2>&1
if test -e ${CENTER_RC} -a ! -e ${LICQ_OWNER}.orig
  then
    read_centericq_conf < ${CENTER_RC}
    if test -e ${LICQ_CONF}
      then
        out_licq_conf < ${LICQ_CONF} >${LICQ_CONF}.new
      else
        out_licq_conf >${LICQ_CONF}.new <<-EOF
		[licq]
		Version = 1020
		
		[plugins]
		NumPlugins = 1
		Plugin1 = qt-gui
		
		[network]
		AllowNewUsers = 1
		NumOfICQServers = 1
		ICQServer = login.icq.com
		ICQServerPort = 5190
		TCPPortsLow = 0
		TCPPortsHigh = 0
 		TCPEnabled = 1
		MaxUsersPerPacket = 100
		IgnoreTypes = 0
		ForegroundColor = 0
		BackgroundColor = 16777215
		Errors = log.errors
		ErrorTypes = 6
		Rejects = log.rejects
		Translation = none
		UrlViewer = viewurl-netscape.sh
		Terminal = xterm -T Licq -e
		ProxyEnabled = 0
		ProxyServerType = 1
		ProxyServer =
		ProxyServerPort = 0
		ProxyAuthEnabled = 0
		ProxyLogin =
		ProxyPassword =
		UseSS = 0
		
		[onevent]
		Enable = 1
		Command = play
		Message = /usr/share/licq/sounds/icq/Message.wav
		Chat = /usr/share/licq/sounds/icq/Chat.wav
		File = /usr/share/licq/sounds/icq/File.wav
		Url = /usr/share/licq/sounds/icq/URL.wav
		OnlineNotify = /usr/share/licq/sounds/icq/Notify.wav
		SysMsg = /usr/share/licq/sounds/icq/System.wav
		
		[groups]
		NumOfGroups = 3
		DefaultGroup = 0
		NewUserGroup = 1
		Group1.name = New Users
		Group2.name = Friends
		Group3.name = Family
		Group1.id = 0
		Group2.id = 0
		Group3.id = 0
		EOF
      fi
    echo -n > ${OWNER_HISTORY}
#    if test -e ${LICQ_OWNER}
#      then
#        out_owner_uin < ${LICQ_OWNER} >${LICQ_OWNER}.new
#      else
        out_owner_uin >${LICQ_OWNER}.new <<-EOF
		[user]
		Alias = None
		Password =
		Uin = 0
		WebPresence = 0
		HideIP = 0
		History = ${OWNER_HISTORY}
		Groups.System = 0
		Groups.User = 0
		Ip = 0.0.0.0
		IntIp = 0.0.0.0
		Port = 1800
		NewMessages = 0
		LastOnline = 0
		LastSent = 0
		LastRecv = 0
		LastCheckedAR = 0
		AutoAccept = 0
		StatusToUser = 65535
		CustomAutoRsp =
		SendIntIp = 0
		UserEncoding =
		SID = 0
		GSID = 0
		Authorization = 0
		RCG = 0
		SSTime = 0
		SSCount = 0
		AutoResponse =
		EOF
#      fi
    parse_contacts
    out_users_conf >${LICQ_USERS}.new
  fi

test_mv ${LICQ_CONF}
test_mv ${LICQ_OWNER}
test_mv ${LICQ_USERS}

chmod 700 ${LICQ_DIR}
chmod 600 ${LICQ_DIR}/*
chmod 700 ${LICQ_USER_DIR}
chmod 600 ${LICQ_USER_DIR}/*
chmod 700 ${LICQ_HISTORY_DIR}
chmod 600 ${LICQ_HISTORY_DIR}/*
