LICQ v0.70h

An ICQ clone written fully in c++ using a plugin system to allow for
many possible interfaces.  
See the webpage (http://www.licq.org) for more information.
Licq implements messages (online and offline), urls, chat, full file
transfer, gui configuration (with the qt-gui plugin), history as 
well as a number of other features.


LICENSE

This program is licensed under the terms of the GNU GPL, a copy
of which you should have received with this package.


INSTALLATION:

(If you have a binary distribution then see the FAQ for how to
 do a manual install.  Don't worry it's very easy, any monkey
 could do it.)

Make sure to read the PLUGINS section below for important information on
running Licq!
***Note that at least one plugin must be loaded or licq will simply exit***

As root:
1. Type './configure' and it will determine all the right settings and 
   directories for your system. 
2. Have a look at config.h and see if you want to change any of the
   options in it.
3. Type 'make' and in theory it will build. If you are using a non-GNU system,
   such as FreeBSD or Solaris, you will need the GNU version of make, often
   installed as `gmake'.  If you get errors about "void *" see the FAQ.
4. Type 'make install' and licq will be installed (defaults to 
   /usr/local).

As each user:
5. When you run licq for the first time it will install all the necessary
   files in ~/.licq.
6. You can import users from Micq or ICQJava into Licq using licq.micqconvert 
   or licq.javaconvert.  Run these scripts from your personal conf/ 
   directory.  You can also import your windows list using licq.winconvert,
   which is a perl script and so requires you to have perl installed.


PLUGINS:

Plugins must be unpacked to the plugins/ directory in the licq source
tree.  This is to ensure that the necessary include files can be found.
After building a plugin, it should be installed in
{prefix}/share/licq/plugins.  This will most likely be done
automatically when you run "make install" for the given plugin.  A
plugin may be started by either passing licq the full path and filename
or (more typically) by simply passing it the name of the plugin, where
the plugin is {prefix}/share/licq/plugins/licq_<name>.so.  Type licq -h
for more help on starting licq with plugins. 

***Note that at least one plugin must be loaded or licq will simply ***
***exit. By default, the qt-gui plugin will be loaded.              ***


SOCKS5 Proxy Support:
Licq supports SOCKS5 proxies.  To enable this support, run configure with
--enable-socks5, and optionally --with-socks5-inc=PATH and 
--with-socks5-lib=PATH.  Then just make sure all the right environment
variables are set and it should work.  Also read the README.SOCKS file.

Licq requires the following:
Some C++ compiler with proper standard c++ headers.

Licq has been compiled and run successfully on the following systems at one 
point (note current versions may no longer compile without a bit of tweaking):
Linux/x86
Linux/Alpha
Linux/PPC
FreeBSD/i386
AIX/RS6000
NetBSD/mk68000
Sun3/mk68000
Solaris/x86
Unixware
Solaris/sparc

CONFIGURATION:

Configuration is done through the ~/.licq/licq.conf file, which contains .ini 
style options.  Help on each option is include in the file.  The contact 
list is stored in conf/users.conf.  Each users info is stored as a simple 
text file called {user uin}.uin.  Again, the options are pretty obvious.  
You can add/remove/edit a user inside the gui, or by editing the conf files.  

The History file is the file where the user history is stored...you can 
specify a filename for each user, or you can put one of the following 
keywords:
none : no history file
default : makes the history file history/<uin>.history


USE:

Type licq -h for commandline help.

Using licq is fairly straight-forward.  Licq itself is merely a daemon
designed to run various plugin interfaces.  I have written an advanted
gui in qt (qt-gui) which should be used as the default plugin.  Once you
have compiled and installed Licq, unpack the plugins you wish to use into
the plugins/ directory, compile them, and then install them into 
/usr/local/share/licq/plugins (replace /usr/local with the prefix given
to configure if necessary).  Then start licq with the -p option:
$ licq -p qt-gui -- ...any options to the plugin...

Note the -- which tells the system to pass any options after that on to the
first plugin in the list.  Multiple plugins can be chained in this way:
$ licq -p qt-gui -p email-forward -- <qt-gui options> -- <email-forward options>


PROBLEMS:

See the BUGS file for reports on known bugs and problems.


TROUBLE-SHOOTING:

1. RUNNING
o  Segfault at startup.  If this occurs, run licq with the -d 15 switch and tell
   me how far it gets before segfaulting and I'll try and help.

Good luck.


CONTACTS:

Send any questions, comments, or other complaints to licq@phreaker.net, uin 2127503
