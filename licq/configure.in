dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/licq.h)
AC_CONFIG_AUX_DIR(admin)
AC_CANONICAL_SYSTEM
AC_ARG_PROGRAM

dnl All versioning is done via these defines
INT_VERSION=850
AM_INIT_AUTOMAKE(licq, 0.85)

AM_CONFIG_HEADER(config.h)

dnl Chuck #defines for PACKAGE and VERSION into config.h
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_DEFINE_UNQUOTED(INT_VERSION,$INT_VERSION)

dnl Also substitute PACKAGE and VERSION in the AC_OUTPUT files
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
LICQ_CXX_FLAGS
AC_PROG_CXXCPP
AC_ISC_POSIX
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PATH_PROG(PROG_STRIP,strip,:)
AC_PATH_PROG(PROG_SIZE,size,:)

dnl Set up some operating system specific options
case "$host" in
	*-*-openbsd*)
		CFLAGS="$CFLAGS -pthread"
		CPPFLAGS="$CPPFLAGS -D_REENTRANT"
		CXXFLAGS="$CXXFLAGS -pthread"
		echo "Setting OpenBSD compilation options"
		;;
	*-*-freebsd*)
		CFLAGS="$CFLAGS -pthread"
		CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE"
		CXXFLAGS="$CXXFLAGS -pthread"
		echo "Setting FreeBSD compilation options"
		;;
	*-*-solaris*)
		CPPFLAGS="$CPPFLAGS -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS -DUSE_SOLARIS -DPIC -fPIC"
		echo "Setting Solaris compilation options"
		;;
	*-*-linux*)
 		CPPFLAGS="$CPPFLAGS -fPIC -DPIC -D_REENTRANT"
		echo "Setting Linux compilation options"
		;;
  *-*-aix*)
    CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE"
    LIBS="$LIBS -lc_r"
    echo "Setting AIX compilation options"
    ;;
	*)
		echo "Licq may not compile on this system. Good luck :-)"
		;;
esac

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(errno.h fcntl.h getopt.h limits.h malloc.h pwd.h unistd.h paths.h)

dnl Checks for library functions.
AC_CHECK_LIB(xnet,inet_addr)
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, gethostbyname)

AC_CHECK_LIB(c_r,pthread_cancel, [], [
  AC_CHECK_LIB(pthread, pthread_cancel, [], [
    AC_CHECK_LIB(thread, pthread_cancel, [], [
      AC_CHECK_LIB(pthreads, pthread_cancel, [], [
        cat <<EOF;

Please install/update your POSIX threads (pthreads) library. Updates should be
available from either your system vendor, or, for GNU/Linux systems, go to
http://pauillac.inria.fr/~xleroy/linuxthreads/.  GNU Pth can also be used if
configured with --enable-pthread.

EOF
exit 1
      ])
    ])
  ])
])


AC_CHECK_LIB(c_r, dlopen, [], [
  AC_CHECK_LIB(c, dlopen, [], [
    AC_CHECK_LIB(dl, dlopen, [], [
      echo "I can't find the library containing dlopen()"
      exit 1
    ])
  ])
])

AC_MSG_CHECKING([for dlopen modes])
AC_TRY_COMPILE([
#include <stdio.h>
#include <dlfcn.h>
],[
dlopen(NULL, RTLD_LAZY)
],[
  AC_MSG_RESULT([RTLD_LAZY])
  AC_DEFINE_UNQUOTED(DLOPEN_POLICY, RTLD_LAZY)
],[
  AC_TRY_COMPILE([
  #include <stdio.h>
  #include <dlcfn.h>
  ],[
  dlopen(NULL, DL_LAZY)
  ],[
    AC_MSG_RESULT([DL_LAZY])
    AC_DEFINE_UNQUOTED(DLOPEN_POLICY, DL_LAZY)
  ],[
    AC_MSG_RESULT([cannot determine, bailing])
    exit 1;
  ])
])


AC_CHECK_FUNCS(alphasort inet_addr inet_aton mktime select scandir strdup strerror hstrerror readdir_r)

AC_CHECK_SOCKS5
LICQ_CHECK_OPENSSL

dnl Switch to C++ mode and check for needed C++ headers
AC_LANG_SAVE
AC_LANG_CPLUSPLUS

AC_CHECK_HEADER(vector.h,,
  AC_MSG_ERROR(You need to have the libstdc++ headers installed))

AC_LANG_RESTORE

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_C_SOCKLEN_T
AC_HEADER_TIME
AC_STRUCT_TM
LICQ_SYS_ERRLIST
LICQ_CHECK_GMTOFF
LICQ_CHECK_TIMEZONE

dnl libtool stuff
AC_OBJEXT
AC_EXEEXT
AC_LIBTOOL_DLOPEN
AC_DISABLE_SHARED
AM_PROG_LIBTOOL
AC_LIBTOOL_CXX

AC_OUTPUT(
  share/Makefile \
  src/Makefile \
  include/Makefile \
  Makefile )


echo ""
echo ""

if test "$WITH_SOCKS5" = "no"; then
  echo "SOCKS5 support is disabled."
else
  echo "SOCKS5 support is enabled."
fi

if test "$WITH_OPENSSL" = "no"; then
  echo "OpenSSL support is not available.  Licq will not be able to"
  echo "establish secure communication channels.  If you desire this"
  echo "functionality install OpenSSL (libraries and headers) and"
  echo "rebuild Licq.  OpenSSL can be found at http://www.openssl.org"
  echo "or as RPM from your local distribution site.  Note you need"
  echo "version 0.9.4 or greater."
else
  echo "OpenSSL secure channel support is enabled."
fi

echo ""
echo "--- Now type \"gmake\" to build Licq ---"
echo "--- If gmake is not working, try \"make\" ---"
echo ""

