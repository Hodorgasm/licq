dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/licq.h)
AC_CONFIG_HEADER(config.h)

dnl All versioning is done via these defines
PACKAGE=Licq
VERSION=0.71
INT_VERSION=71

dnl Chuck #defines for PACKAGE and VERSION into config.h
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_DEFINE_UNQUOTED(INT_VERSION,$INT_VERSION)

dnl Also substitute PACKAGE and VERSION in the AC_OUTPUT files
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Set up some operating system specific options
AC_CANONICAL_SYSTEM
case "$host" in
	*-*-openbsd*)
		CFLAGS="$CFLAGS -pthread"
		CPPFLAGS="$CPPFLAGS -D_REENTRANT"
		CXXFLAGS="$CXXFLAGS -pthread"
		echo "Setting OpenBSD compilation options"
		;;
	*-*-freebsd*)
		CFLAGS="$CFLAGS -pthread"
		CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE"
		CXXFLAGS="$CXXFLAGS -pthread"
		echo "Setting FreeBSD compilation options"
    echo "Note you will need to upgrade to a newer pthreads implementation"
		;;
	*-*-solaris*)
		CPPFLAGS="$CPPFLAGS -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS -DUSE_SOLARIS -DPIC -fPIC"
		CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions"
		echo "Setting Solaris compilation options"
		;;
	*-*-linux*)
 		CPPFLAGS="$CPPFLAGS -fPIC -DPIC -D_REENTRANT"
		CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions"
		echo "Setting Linux compilation options"
		;;
	*)
		echo "Licq may not compile on this system. Good luck :-)"
		;;
esac

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
dnl AC_PROG_CXX_FNO_RTTI
AC_PROG_CXXCPP
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PATH_PROG(PROG_STRIP,strip,:)
AC_PATH_PROG(PROG_SIZE,size,:)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(errno.h fcntl.h getopt.h limits.h malloc.h pwd.h unistd.h)

dnl Checks for library functions.
AC_CHECK_LIB(xnet,inet_addr)
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, gethostbyname)

AC_CHECK_LIB(c_r,pthread_create, [], [
  AC_CHECK_LIB(pthread, pthread_create, [], [
    AC_CHECK_LIB(thread, pthread_create, [], [
      cat <<EOF;

Please install/update your POSIX threads (pthreads) library. Updates should be
available from either your system vendor, or, for GNU/Linux systems, go to
http://pauillac.inria.fr/~xleroy/linuxthreads/

EOF
exit 1
    ])
  ])
])

dnl AC_CHECK_LIB(c, dlopen)
dnl if test "$ac_cv_lib_c_dlopen" = "no"; then
dnl   AC_CHECK_LIB(dl, dlopen)
dnl   if test "$ac_cv_lib_dl_dlopen" = "no"; then
dnl     echo "I can't find the library containing dlopen()"
dnl     exit 1
dnl   fi
dnl fi

AC_CHECK_LIB(c_r, dlopen, [], [
  AC_CHECK_LIB(c, dlopen, [], [
    AC_CHECK_LIB(dl, dlopen, [], [
      echo "I can't find the library containing dlopen()"
      exit 1
    ])
  ])
])

AC_MSG_CHECKING([for dlopen modes])
AC_TRY_COMPILE([
#include <stdio.h>
#include <dlfcn.h>
],[
dlopen(NULL, RTLD_LAZY)
],[
  AC_MSG_RESULT([RTLD_LAZY])
  AC_DEFINE_UNQUOTED(DLOPEN_POLICY, RTLD_LAZY)
],[
  AC_TRY_COMPILE([
  #include <stdio.h>
  #include <dlcfn.h>
  ],[
  dlopen(NULL, DL_LAZY)
  ],[
    AC_MSG_RESULT([DL_LAZY])
    AC_DEFINE_UNQUOTED(DLOPEN_POLICY, DL_LAZY)
  ],[
    AC_MSG_RESULT([cannot determine, bailing])
    exit 1;
  ])
])

AC_CHECK_FUNCS(alphasort inet_addr inet_aton mktime select scandir strdup strerror hstrerror)

AC_CHECK_SOCKS5

dnl Switch to C++ mode and check for needed C++ headers
AC_LANG_SAVE
AC_LANG_CPLUSPLUS

AC_CHECK_LIB(stdc++, getc,,
  AC_MSG_ERROR(You need to have libstdc++ installed))
AC_CHECK_HEADER(vector.h,,
  AC_MSG_ERROR(You need to have the libstdc++ headers installed))

AC_LANG_RESTORE

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_C_SOCKLEN_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_SYS_ERRLIST

AC_OUTPUT(
  share/Makefile
  src/Makefile
  src/daemon/Makefile
  Makefile)

echo ""
echo "Please remember to use GNU make, often installed as gmake."
echo ""
