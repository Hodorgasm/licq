LICQ Qt-GUI Plugin v0.66.2

A plugin for Licq to enable a gui based on Qt.

LICENSE

This program is licensed under the terms of the GNU GPL, with the
exception that it may be compiled and linked with the TrollTech QT
library without implying that any of the rights or restrictions
associated with the GPL are applied to the QT library.

INSTALLATION:

(If you have a binary distribution then see the FAQ for how to
 do a manual install.  Don't worry it's very easy, any monkey
 could do it.)

0. Make sure you unpacked the source into the plugins directory of
   the licq source tree.
1. Type './configure' and it will determine all the right settings and 
   directories for your system.  If it fails, try the following manual 
   directory specifications:
  --with-kde              To enable various KDE options (including kstyles)
  --x-includes=DIR        X include files are in DIR
  --x-libraries=DIR       X library files are in DIR
  --with-qt-dir           where the root of qt is installed
  --with-qt-includes      where the qt includes are.
  --with-qt-libraries     where the qt library is installed.
2. Have a look at config.h and see if you want to change any of the
   options in it.
3. Type 'make' and in theory it will build. If you are using a non-GNU system,
   such as FreeBSD or Solaris, you will need the GNU version of make, often
   installed as `gmake'.  If you get errors about "void *" see the FAQ.
4. Type 'make install' and licq will be installed (defaults to 
   /usr/local).

Licq Qt-GUI requires the following:
Qt >= 2.00 (if you are using rpm then it requires the qt and qt-devel rpm)
Some C++ compiler

CONFIGURATION:

Configuration is done through the ~/.licq/licq_qt-gui.conf file, which 
contains .ini style options.  Help on each option is include in the file.  

USE:

Type licq -h -p qt-gui for commandline help.

Using licq is very straight-forward.  To access any of the options, just 
right click on a user and select the relevant command, or double click on 
the user.  A window will open containing a tab dialog with all the 
possible things to do.  In this way you can read a new message, check user 
info, and send a message all from the same window at the same time.  
One key feature of licq is the network status window, which can be viewed 
by selecting "Show Network Window" under the "System" menu.  This screen 
will show you exactly what is occuring at the protocol level.  
The menu option "<your alias>" will allow you to view your own settings 
and to check system messages.


PROBLEMS:

See the BUGS file for reports on known bugs and problems.


TROUBLE-SHOOTING:

1. COMPILING
The most common problem with compiling licq is with gcc 2.8 and Qt.  It seems 
that there are a number of binary incompatibilities between gcc 2.7 and 2.8, 
so that trying to link source built with gcc 2.8 to a shared library built 
with 2.7 will most often fail.

The warnings I've seen in regards to this are of the type:
1. linking errors about "type_info"
2. linking errors about "QPainter" and "QWidget"
Both of these problems are best solves by upgrading to a version of libqt.so 
compiled with gcc 2.8.  The only rpm which works with egcs or gcc 2.8 is the 
rh51 one from ftp.troll.no.  You can also download the src rpm and do a 
$ rpm --rebuild <qt version>.src.rpm.

Another possible solution is to add -fno-rtti to the compile line in the Makefile 
(ie GCC=g++ -fno-rtti) and/or remove the -O2 optimization.  This will mainly work 
if your error is of the first type above.
Both of these solutions may result in a successful compile but the program may
segfault at startup.

2. RUNNING
o  Segfault at startup.  If this occurs, run licq with the -d 1 switch and tell
   me how far it gets before segfaulting and I'll try and help.

Good luck.


CONTACTS:

Send any questions, comments, or other complaints to licq@phreaker.net, uin 2127503
